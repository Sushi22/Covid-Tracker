{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailydata","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setdailyData","useEffect","fetchAPI","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5b2220a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2QtAk\",\"card\":\"Cards_card__FQr-g\",\"infected\":\"Cards_infected__2wMJJ\",\"recovered\":\"Cards_recovered__2U6Wo\",\"deaths\":\"Cards_deaths__221MX\"};","import React from 'react';\r\nimport styles from './Cards.module.css';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards =({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed)\r\n    {\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused  by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeableUrl);\r\n        const modifiedData={\r\n            confirmed:confirmed,\r\n            recovered:recovered,\r\n            deaths:deaths,\r\n            lastUpdate:lastUpdate\r\n        }\r\n        return modifiedData;\r\n    }\r\n    catch(error)\r\n    {\r\n        return error;\r\n    }\r\n}\r\n \r\nexport const fetchDailydata= async ()=>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData= data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n\r\n    }\r\n    catch(error){\r\n        return error;\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async()=>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country)=>country.name);\r\n\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailydata} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2'\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\nconst Chart =({data:{confirmed,recovered,deaths},country})=>{\r\n    \r\n    const [dailyData,setdailyData]=useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setdailyData(await fetchDailydata());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n\r\n    const LineChart = (\r\n        dailyData.length\r\n        ?\r\n        (\r\n        <Line\r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true\r\n\r\n                },{\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:\"rgba(255,0,0,0.5)\",\r\n                    fill:true\r\n                }],\r\n            }}/>):\r\n            null\r\n        );\r\n\r\n\r\n    const barChart=(\r\n        confirmed\r\n        ?\r\n        (\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:[\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)',\r\n\r\n                    ],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n\r\n            }}\r\n            options={\r\n                {\r\n                    legend:{display:false},\r\n                    title:{display:true,text:`Current state in ${country}`}\r\n                }\r\n            }\r\n            />\r\n        ):null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart:LineChart}\r\n        </div>\r\n        \r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport styles from './CountryPicker.module.css';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker =({handleCountryChange})=>{\r\n\r\n    const [fetchedCountries, setFetchedCountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },)\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Chart,Cards,CountryPicker} from './components';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport {fetchData} from './api';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component\r\n{\r\n    state={\r\n        data:{},\r\n        country:\"\"\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const fetchedData= await fetchData();\r\n        this.setState({data:fetchedData});\r\n        \r\n    }\r\n\r\n    handleCountryChange =async(country)=>{\r\n        console.log(country);\r\n        const fetchedData=await fetchData(country);\r\n        this.setState({data:fetchedData,country:country});\r\n    }\r\n\r\n   render(){\r\n       const {data,country}=this.state;\r\n    return(\r\n        <div className={styles.container}>\r\n            <img src={image} alt=\"COVID\"/>\r\n            <Cards data={data}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Chart data={data} country={country} />\r\n        </div>\r\n    );\r\n   }\r\n   \r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__37Hoe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__4q9z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2llA9\",\"img\":\"App_img__2sJET\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}